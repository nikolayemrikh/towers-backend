CREATE TYPE public."Power" AS ENUM (
    'Remove_top',
    'Remove_middle',
    'Remove_bottom',
    'Protect',
    'Swap_neighbours',
    'Swap_through_one',
    'Move_down_by_two',
    'Move_up_by_two'
);


ALTER TYPE public."Power" OWNER TO postgres;

CREATE TABLE public.board (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    pulled_card_number_to_change smallint,
    opened_card_number_to_use smallint,
    turn_user_id uuid
);


ALTER TABLE public.board OWNER TO postgres;


ALTER TABLE public.board ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Board_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.card_variant (
    number smallint NOT NULL,
    power public."Power" NOT NULL
);


ALTER TABLE public.card_variant OWNER TO postgres;


ALTER TABLE public.card_variant ALTER COLUMN number ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Card_number_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.card_tower (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    board_id bigint NOT NULL,
    user_id uuid NOT NULL
);


ALTER TABLE public.card_tower OWNER TO postgres;


ALTER TABLE public.card_tower ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Deck_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE public.card_in_board_deck (
    created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    board_id bigint,
    card_number smallint NOT NULL,
    id bigint NOT NULL
);


ALTER TABLE public.card_in_board_deck OWNER TO postgres;


ALTER TABLE public.card_in_board_deck ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_in_board_deck_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE public.card_in_board_discard_deck (
    created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    board_id bigint NOT NULL,
    card_number smallint NOT NULL,
    id bigint NOT NULL
);


ALTER TABLE public.card_in_board_discard_deck OWNER TO postgres;


ALTER TABLE public.card_in_board_discard_deck ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_in_board_discard_deck_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE public.card_in_tower (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    card_number smallint NOT NULL,
    card_tower_id bigint NOT NULL
);


ALTER TABLE public.card_in_tower OWNER TO postgres;


ALTER TABLE public.card_in_tower ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_in_tower_2_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE public.user_in_lobby (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    user_id uuid NOT NULL
);


ALTER TABLE public.user_in_lobby OWNER TO postgres;


ALTER TABLE public.user_in_lobby ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_in_lobby_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


ALTER TABLE ONLY public.board
    ADD CONSTRAINT "Board_pkey" PRIMARY KEY (id);



ALTER TABLE ONLY public.card_variant
    ADD CONSTRAINT "Card_number_key" UNIQUE (number);



ALTER TABLE ONLY public.card_variant
    ADD CONSTRAINT "Card_pkey" PRIMARY KEY (number);



ALTER TABLE ONLY public.card_tower
    ADD CONSTRAINT "Deck_pkey" PRIMARY KEY (id);



ALTER TABLE ONLY public.card_in_board_deck
    ADD CONSTRAINT card_in_board_deck_pkey PRIMARY KEY (id);



ALTER TABLE ONLY public.card_in_board_discard_deck
    ADD CONSTRAINT card_in_board_discard_deck_pkey PRIMARY KEY (id);



ALTER TABLE ONLY public.card_in_tower
    ADD CONSTRAINT card_in_tower_2_pkey PRIMARY KEY (id);



ALTER TABLE ONLY public.user_in_lobby
    ADD CONSTRAINT user_in_lobby_pkey PRIMARY KEY (id);



ALTER TABLE ONLY public.board
    ADD CONSTRAINT board_opened_card_number_to_use_fkey FOREIGN KEY (opened_card_number_to_use) REFERENCES public.card_variant(number);



ALTER TABLE ONLY public.board
    ADD CONSTRAINT board_pulled_card_number_to_change_fkey FOREIGN KEY (pulled_card_number_to_change) REFERENCES public.card_variant(number);



ALTER TABLE ONLY public.board
    ADD CONSTRAINT board_turn_user_id_fkey FOREIGN KEY (turn_user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY public.card_in_board_deck
    ADD CONSTRAINT card_in_board_deck_board_id_fkey FOREIGN KEY (board_id) REFERENCES public.board(id) ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY public.card_in_board_deck
    ADD CONSTRAINT card_in_board_deck_card_number_fkey FOREIGN KEY (card_number) REFERENCES public.card_variant(number);



ALTER TABLE ONLY public.card_in_board_discard_deck
    ADD CONSTRAINT card_in_board_discard_deck_board_id_fkey FOREIGN KEY (board_id) REFERENCES public.board(id) ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY public.card_in_board_discard_deck
    ADD CONSTRAINT card_in_board_discard_deck_card_number_fkey FOREIGN KEY (card_number) REFERENCES public.card_variant(number);



ALTER TABLE ONLY public.card_in_tower
    ADD CONSTRAINT card_in_tower_card_number_fkey FOREIGN KEY (card_number) REFERENCES public.card_variant(number);



ALTER TABLE ONLY public.card_in_tower
    ADD CONSTRAINT card_in_tower_card_tower_id_fkey FOREIGN KEY (card_tower_id) REFERENCES public.card_tower(id) ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY public.card_tower
    ADD CONSTRAINT card_tower_board_id_fkey FOREIGN KEY (board_id) REFERENCES public.board(id) ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY public.card_tower
    ADD CONSTRAINT card_tower_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);



ALTER TABLE ONLY public.user_in_lobby
    ADD CONSTRAINT user_in_lobby_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);




CREATE POLICY "Enable delete for users based on user_id" ON public.user_in_lobby FOR DELETE USING ((auth.uid() = user_id));



CREATE POLICY "Enable insert for authenticated users only" ON public.user_in_lobby FOR INSERT TO authenticated WITH CHECK (true);



CREATE POLICY "Enable read access for all users" ON public.board FOR SELECT TO authenticated USING (true);



CREATE POLICY "Enable read access for all users" ON public.card_in_board_deck FOR SELECT TO authenticated USING (true);



CREATE POLICY "Enable read access for all users" ON public.card_in_board_discard_deck FOR SELECT TO authenticated USING (true);



CREATE POLICY "Enable read access for all users" ON public.card_tower FOR SELECT TO authenticated USING (true);



CREATE POLICY "Enable read access for all users" ON public.card_variant FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON public.user_in_lobby FOR SELECT USING (true);



ALTER TABLE public.board ENABLE ROW LEVEL SECURITY;


ALTER TABLE public.card_in_board_deck ENABLE ROW LEVEL SECURITY;


ALTER TABLE public.card_in_board_discard_deck ENABLE ROW LEVEL SECURITY;


ALTER TABLE public.card_in_tower ENABLE ROW LEVEL SECURITY;


ALTER TABLE public.card_tower ENABLE ROW LEVEL SECURITY;


ALTER TABLE public.card_variant ENABLE ROW LEVEL SECURITY;


ALTER TABLE public.user_in_lobby ENABLE ROW LEVEL SECURITY;


ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.board;



ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.card_in_board_deck;



ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.card_in_board_discard_deck;



ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.card_tower;



ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.user_in_lobby;




GRANT ALL ON TABLE public.board TO anon;
GRANT ALL ON TABLE public.board TO authenticated;
GRANT ALL ON TABLE public.board TO service_role;



GRANT ALL ON SEQUENCE public."Board_id_seq" TO anon;
GRANT ALL ON SEQUENCE public."Board_id_seq" TO authenticated;
GRANT ALL ON SEQUENCE public."Board_id_seq" TO service_role;



GRANT ALL ON TABLE public.card_variant TO anon;
GRANT ALL ON TABLE public.card_variant TO authenticated;
GRANT ALL ON TABLE public.card_variant TO service_role;



GRANT ALL ON SEQUENCE public."Card_number_seq" TO anon;
GRANT ALL ON SEQUENCE public."Card_number_seq" TO authenticated;
GRANT ALL ON SEQUENCE public."Card_number_seq" TO service_role;



GRANT ALL ON TABLE public.card_tower TO anon;
GRANT ALL ON TABLE public.card_tower TO authenticated;
GRANT ALL ON TABLE public.card_tower TO service_role;



GRANT ALL ON SEQUENCE public."Deck_id_seq" TO anon;
GRANT ALL ON SEQUENCE public."Deck_id_seq" TO authenticated;
GRANT ALL ON SEQUENCE public."Deck_id_seq" TO service_role;



GRANT ALL ON TABLE public.card_in_board_deck TO anon;
GRANT ALL ON TABLE public.card_in_board_deck TO authenticated;
GRANT ALL ON TABLE public.card_in_board_deck TO service_role;



GRANT ALL ON SEQUENCE public.card_in_board_deck_id_seq TO anon;
GRANT ALL ON SEQUENCE public.card_in_board_deck_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.card_in_board_deck_id_seq TO service_role;



GRANT ALL ON TABLE public.card_in_board_discard_deck TO anon;
GRANT ALL ON TABLE public.card_in_board_discard_deck TO authenticated;
GRANT ALL ON TABLE public.card_in_board_discard_deck TO service_role;



GRANT ALL ON SEQUENCE public.card_in_board_discard_deck_id_seq TO anon;
GRANT ALL ON SEQUENCE public.card_in_board_discard_deck_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.card_in_board_discard_deck_id_seq TO service_role;



GRANT ALL ON TABLE public.card_in_tower TO anon;
GRANT ALL ON TABLE public.card_in_tower TO authenticated;
GRANT ALL ON TABLE public.card_in_tower TO service_role;



GRANT ALL ON SEQUENCE public.card_in_tower_2_id_seq TO anon;
GRANT ALL ON SEQUENCE public.card_in_tower_2_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.card_in_tower_2_id_seq TO service_role;



GRANT ALL ON TABLE public.user_in_lobby TO anon;
GRANT ALL ON TABLE public.user_in_lobby TO authenticated;
GRANT ALL ON TABLE public.user_in_lobby TO service_role;



GRANT ALL ON SEQUENCE public.user_in_lobby_id_seq TO anon;
GRANT ALL ON SEQUENCE public.user_in_lobby_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.user_in_lobby_id_seq TO service_role;
